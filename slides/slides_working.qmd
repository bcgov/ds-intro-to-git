---
title: "Version Control using Git + GitHub"
subtitle: "BC Stats Workshop"
date: 01/29/2025
date-format: long
format:
    revealjs: 
        slide-number: true
        chalkboard: 
          buttons: false
        preview-links: auto
        #logo: images/quarto.png
        theme: [white, custom.scss]
---


## Why Version Control?

BC Stats has A LOT of source code that make:

::::: columns
::: {.column width="50%"}
-   aggregate / “tidy” data tables
-   figures/plots & maps
-   PDF reports
-   dashboards & applications
-   prediction models
-   provincial statistics
:::

::: {.column width="50%"}
![](/figures/code1.png){fig-pos="t"}
:::
:::::

::: footer
Photo source: [Programming Code](https://commons.wikimedia.org/wiki/File:Programming_code.jpg) © [Martin Vorel](https://commons.wikimedia.org/wiki/User:Bloxgros), [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0).
:::

::: notes
BC Stats has a lot of source code that make both final products and intermediate artifacts such clean tables of data. And the multitude of verisons and copies of scripts that we handle in a project can start to get overwhelming and messy.  We can loose track of a change we made, or seek out creative ways to keep from losing track of our work as we share files around.
:::

## What is Version Control?

<br> <br> ![](/figures/git-logo.png){fig-pos="t" width="50%"}

![](/figures/git-circles.png){fig-pos="t"}

::: footer
Source: <https://git-scm.com/about>
:::

::: notes
A version control system is a tool that keeps track of changes for us. There are several options; we are going to talk about git. It keeps track of snapshots in time.

You decide which changes make up each snapshot, and git stores those changes and keeps useful metadata about them. You store all of your project files in a folder. All of the files, plus the complete history for all the files in a that folder make up a repository (“repo”). Repositories can be kept in sync across different computers facilitating collaboration among different people.

From Git website: Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.

Git is easy to learn and has a tiny footprint with lightning fast performance. It outclasses SCM tools like Subversion, CVS, Perforce, and ClearCase with features like cheap local branching, convenient staging areas, and multiple workflows.
:::

## Bash Jargon

``` bash {eval=false}
$ cd path/to/directory          # Go to specified directory - "quotes" are needed if there are spaces 
$ cd ..                         # Go up one directory level
$ mkdir new_directory           # Create specified directory
$ ls                            # List directories and files
$ ls -a                         # List directories and files, including hidden
```

::: notes
:::

## Bash Jargon

``` bash {eval=false}
#| class-output: output
$ git init					        # initiate a repository in the current directory
$ git status				        # indicate if there are any changes to files
$ git add <filename>		    	# add a new file/change to the staging area
$ git commit –m “commit message”	# commit all staged changes to the repository
$ git log					        # view commit history
$ git diff					        # show changes between commits
$ git restore				        # restore file/s to previous commit
```

::: notes
:::


## Local Repository
![](/figures/local-repository.png){fig-pos="t" fig-align="center"}

::: notes
Repository is just “your” folder under version control
:::

## GitHub

:::::::: columns
::: {.column width="50%"}
![](/figures/github-mark.png){fig-pos="t" fig-align="center" width=250%}
:::

::: {.column width="50%"}
- Hosting service for git repositories
- Greatly facilitates collaboration

Git: Version Control +
Hub: Centralized repos & 
networking/collaborating
:::
::::::::

::: notes
GitHub is a platform that hosts Git repositories in the web and provides a web interface to interact with repos.
Main Function is to host the ‘remote’ or main copy of a git repository (project)
:::

## {background-image="/figures/git-logo.png" background-size="10%" background-position="85% 6%"}

::: notes

:::

## Remote Repository  {background-image="/figures/github-mark.png" background-size="10%" background-position="85% 6%"}

::: notes

:::

## Create your first remote repository! {background-image="/figures/github-mark.png" background-size="10%" background-position="85% 6%"}

::: notes

:::

## {background-image="/figures/github-mark.png" background-size="10%" background-position="85% 6%"}

::: notes

:::

## {background-image="/figures/github-mark.png" background-size="10%" background-position="85% 6%"}

::: notes

:::

## Test
```{r}
#| class-output: output

x = "hello quarto"
print(x)
1 + 1
```